version: '3.9'
services:
  app:
    container_name: golang_container
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - PORT=${PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DB=${DB_DB}
      - DB_HOST=postgresdb
    tty: true
    build: .
    ports:
      - 8080:8080
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - postgresdb
    env_file:
      - .env
    networks:
      - keats 

  postgresdb:
    image: postgres:latest
    container_name: postgres_container
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB} 
    ports:
      - '5432:5432'
    env_file:
      - .env
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - keats 

  meilisearch:
    container_name: meilisearch
    image: getmeili/meilisearch:v1.1.1
    environment:
      - http_proxy
      - https_proxy
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY:-masterKey}
      - MEILI_NO_ANALYTICS=${MEILI_NO_ANALYTICS:-true}
      - MEILI_ENV=${MEILI_ENV:-development}
      - MEILI_LOG_LEVEL
      - MEILI_DB_PATH=${MEILI_DB_PATH:-/data.ms}
    ports:
      - ${MEILI_PORT:-7700}:7700
    networks:
      - keats 
    volumes:
      - ./data.ms:/data.ms
    restart: unless-stopped

volumes:
  pg_data:

# Networks to be created to facilitate communication between containers
networks:
  keats:
    driver: bridge